# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'references.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_References(object):
    def setupUi(self, References):
        References.setObjectName("References")
        References.resize(502, 251)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../component/window/information.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        References.setWindowIcon(icon)
        References.setStyleSheet("background-color: rgb(57, 57, 57);\n"
"color: rgb(255, 255, 255);")
        self.textEdit = QtWidgets.QTextEdit(References)
        self.textEdit.setGeometry(QtCore.QRect(20, 60, 461, 171))
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(References)
        self.label.setGeometry(QtCore.QRect(40, 10, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Cambria Math")
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setObjectName("label")

        self.retranslateUi(References)
        QtCore.QMetaObject.connectSlotsByName(References)

    def retranslateUi(self, References):
        _translate = QtCore.QCoreApplication.translate
        References.setWindowTitle(_translate("References", "References"))
        self.textEdit.setHtml(_translate("References", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">References </p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://ninjakx.github.io/Image_Enhancement/</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://medium.com/@rndayala/image-histograms-in-opencv-40ee5969a3b7</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://www.youtube.com/channel/UCFB0dxMudkws1q8w5NJEAmw</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://www.geeksforgeeks.org/python-opencv-cv2-rotate-method/</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://docs.opencv.org/3.4/d8/d01/group__imgproc__color__conversions.html</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://docs.opencv.org/4.x/d5/d69/tutorial_py_non_local_means.html</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">https://www.analyticsvidhya.com/blog/2021/08/sharpening-an-image-using-opencv-library-in-python/</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Thank You for the great resources</p></body></html>"))
        self.label.setText(_translate("References", "References"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    References = QtWidgets.QWidget()
    ui = Ui_References()
    ui.setupUi(References)
    References.show()
    sys.exit(app.exec_())
